{"version":3,"sources":["libs/_reset.sass","app.css","blocks/grids.scss","../../node_modules/susy/sass/susy/output/support/_rem.scss","../../node_modules/susy/sass/susy/language/susy/_container.scss","../../node_modules/susy/sass/susy/output/support/_clearfix.scss","../../node_modules/susy/sass/susy/language/susy/_span.scss","../../node_modules/susy/sass/susy/output/float/_span.scss","../../node_modules/susy/sass/susy/output/shared/_direction.scss","blocks/common.sass","blocks/layout.sass","libs/_mixins.sass","blocks/btn.sass","blocks/ico.sass","blocks/social.sass","blocks/nav.sass","blocks/top-banner.sass","blocks/privilege.sass","blocks/help.sass"],"names":[],"mappings":"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","file":"app.css","sourcesContent":["html, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video\n  margin: 0\n  padding: 0\n  border: 0\n  font-size: 100%\n  font: inherit\n  vertical-align: baseline\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section\n  display: block\nbody\n  line-height: 1\nol, ul\n  list-style: none\nblockquote, q\n  quotes: none\nblockquote:before, blockquote:after,\nq:before, q:after\n  content: ''\n  content: none\ntable\n  border-collapse: collapse\n  border-spacing: 0\nhtml, body\n  box-sizing: border-box\n  height: 100%","html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre, a, abbr, acronym, address, big, cite, code, del, dfn, em, img, ins, kbd, q, s, samp, small, strike, strong, sub, sup, tt, var, b, u, i, center, dl, dt, dd, ol, ul, li, fieldset, form, label, legend, table, caption, tbody, tfoot, thead, tr, th, td, article, aside, canvas, details, embed, figure, figcaption, footer, header, hgroup, menu, nav, output, ruby, section, summary, time, mark, audio, video { margin: 0; padding: 0; border: 0; font-size: 100%; font: inherit; vertical-align: baseline; }\n\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, footer, header, hgroup, menu, nav, section { display: block; }\n\nbody { line-height: 1; }\n\nol, ul { list-style: none; }\n\nblockquote, q { quotes: none; }\n\nblockquote:before, blockquote:after, q:before, q:after { content: \"\"; content: none; }\n\ntable { border-collapse: collapse; border-spacing: 0; }\n\nhtml, body { box-sizing: border-box; height: 100%; }\n\n.header__wrap { max-width: 1000px; margin-left: auto; margin-right: auto; }\n.header__wrap:after { content: \" \"; display: block; clear: both; }\n\n.privilege { max-width: 1000px; margin-left: auto; margin-right: auto; }\n.privilege:after { content: \" \"; display: block; clear: both; }\n.privilege__col { width: 49.0566%; float: left; margin-right: 1.88679%; }\n.privilege__col:last-child { width: 49.0566%; float: right; margin-right: 0; }\n\n.help__wrap { max-width: 1000px; margin-left: auto; margin-right: auto; }\n.help__wrap:after { content: \" \"; display: block; clear: both; }\n.help__col { width: 23.58491%; float: left; margin-right: 1.88679%; }\n.help__col:last-child { width: 23.58491%; float: right; margin-right: 0; }\n\n.footer__wrap { max-width: 1000px; margin-left: auto; margin-right: auto; }\n.footer__wrap:after { content: \" \"; display: block; clear: both; }\n.footer__col { width: 23.58491%; float: left; margin-right: 1.88679%; }\n.footer__col:last-child { width: 23.58491%; float: right; margin-right: 0; }\n\nbody { color: #fff; font-size: 14px; line-height: 1.6; font-family: \"Open Sans\", sans-serif; }\n\na { display: block; color: #e5bb31; }\na:hover { text-decoration: none; }\n\nh1 { font-size: 64px; }\n\nh2 { font-size: 38px; }\n\nh3 { font-size: 22px; }\n\nh4 { font-size: 18px; }\n\n.title { text-transform: uppercase; }\n.title span { color: #e5bb31; }\n\n.header { position: absolute; width: 100%; }\n.header__wrap { background: #e5bb31; }\n\n.footer { padding: 35px 0 40px; background: #000; }\n.footer__title { margin-bottom: 30px; }\n.footer__row { margin-top: 20px; *zoom: 1; }\n.footer__row:after { content: \" \"; display: table; clear: both; }\n.footer__row:first-child { margin-top: 0; }\n.footer__img { float: left; margin-right: 8px; width: 50px; height: 50px; }\n.footer__text { font-size: 12px; line-height: 1.4; color: #8a8a8a; }\n.footer__link { display: inline-block; }\n\n.btn { display: inline-block; padding: 0 50px; height: 50px; line-height: 50px; border: 1px solid #9b9b9b; font-size: 16px; color: #fff; text-transform: uppercase; text-decoration: none; transition: all 0.3s ease; }\n.btn:hover { background: #e5bb31; }\n\n.ico { display: inline-block; }\n.ico.is-twitter { width: 18px; height: 14px; background-image: url(\"../img/Twitter.png\"); }\n.ico.is-facebook { width: 8px; height: 14px; background-image: url(\"../img/Facebook.png\"); }\n.ico.is-google { width: 16px; height: 14px; background-image: url(\"../img/Google.png\"); }\n.ico.is-pinterest { width: 12px; height: 14px; background-image: url(\"../img/Pinterest.png\"); }\n\n.social { margin-top: 5px; *zoom: 1; }\n.social:after { content: \" \"; display: table; clear: both; }\n.social__el { float: left; }\n.social__el:first-child { margin-left: 0; }\n.social__link { width: 25px; height: 25px; line-height: 30px; text-align: center; transition: all 0.3s ease; }\n.social__link:hover { background-color: #e5bb31; }\n\n.nav { float: right; }\n.nav__list { *zoom: 1; }\n.nav__list:after { content: \" \"; display: table; clear: both; }\n.nav__el { float: left; }\n.nav__link { padding: 0 20px; height: 100px; line-height: 100px; color: #fff; text-decoration: none; text-transform: uppercase; font-size: 16px; font-weight: 100; transition: all 0.3s ease; }\n.nav__link:hover { background-color: #ebca5e; }\n\n.top-banner { height: 700px; padding-top: 280px; background-color: rgba(0, 0, 0, 0.6); text-align: center; box-sizing: border-box; }\n.top-banner__title { margin-bottom: 40px; font-weight: 100; }\n.top-banner__text { max-width: 625px; margin: 0 auto 80px; line-height: 1.6; }\n\n.privilege { padding: 100px 0; color: #3e3e3e; }\n.privilege__title { font-weight: bold; }\n.privilege__text { color: #3e3e3e; }\n.privilege__link { display: inline-block; }\n\n.help { padding: 50px 0; background-color: rgba(0, 0, 0, 0.6); text-align: center; }\n.help__title { margin-bottom: 60px; font-weight: 100; }\n.help__ico { margin-bottom: 20px; opacity: 0.7; }\n.help__ico svg { fill: #fff; }\n\n\n","@import \"susy\";\n\n$susy: (\n\tcolumns: 4,\n\tgutters: 1/12.5,\n\tcontainer: 1000px,\n\tmath: fluid,\n\toutput: float,\n\tgutter-position: after,\n\n\tdebug: (\n\t\timage: hide,\n\t\tcolor: rgba(#66f, .25),\n\t\toutput: overlay,\n\t\ttoggle: top right,\n\t),\n);\n\n.header__wrap {\n\t@include container;\n}\n\n.privilege {\n\t@include container;\n\n\t&__col {\n\t\t@include span(2);\n\n\t\t&:last-child {\n\t\t\t@include span(2 last);\n\t\t}\n\t}\n}\n\n.help {\n\n\t&__wrap {\n\t\t@include container;\n\t}\n\n\t&__col {\n\t\t@include span(1);\n\n\t\t&:last-child {\n\t\t\t@include span(1 last);\n\t\t}\n\t}\n}\n\n.footer {\n\n\t&__wrap {\n\t\t@include container;\n\t}\n\n\t&__col {\n\t\t@include span(1);\n\n\t\t&:last-child {\n\t\t\t@include span(1 last);\n\t\t}\n\t}\n}","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Container Syntax\n// ================\n\n// Container [mixin]\n// -----------------\n// Set a container element\n// - [$layout]  : <settings>\n@mixin container(\n  $layout: $susy\n) {\n  $inspect    : $layout;\n  $layout     : parse-grid($layout);\n\n  $_width     : get-container-width($layout);\n  $_justify   : parse-container-position(susy-get(container-position, $layout));\n  $_property  : if(susy-get(math, $layout) == static, width, max-width);\n\n  $_box       : susy-get(box-sizing, $layout);\n\n  @if $_box {\n    @include output((box-sizing: $_box));\n  }\n\n  @include susy-inspect(container, $inspect);\n  @include float-container($_width, $_justify, $_property);\n  @include show-grid($layout);\n}\n\n// Container [function]\n// --------------------\n// Return container width\n// - [$layout]  : <settings>\n@function container(\n  $layout: $susy\n) {\n  $layout: parse-grid($layout);\n  @return get-container-width($layout);\n}\n\n// Get Container Width\n// -------------------\n// Calculate the container width\n// - [$layout]: <settings>\n@function get-container-width(\n  $layout: $susy\n) {\n  $layout         : parse-grid($layout);\n  $_width         : susy-get(container, $layout);\n  $_column-width  : susy-get(column-width, $layout);\n  $_math          : susy-get(math, $layout);\n\n  @if not($_width) or $_width == auto {\n    @if valid-column-math($_math, $_column-width) {\n      $_columns   : susy-get(columns, $layout);\n      $_gutters   : susy-get(gutters, $layout);\n      $_spread    : if(is-split($layout), wide, narrow);\n      $_width     : susy-sum($_columns, $_gutters, $_spread) * $_column-width;\n    } @else {\n      $_width: 100%;\n    }\n  }\n\n  @return $_width;\n}\n\n// Parse Container Position\n// ------------------------\n// Parse the $container-position into margin values.\n// - [$justify]   : left | center | right | <length> [<length>]\n@function parse-container-position(\n  $justify: map-get($susy-defaults, container-position)\n) {\n  $_return: if($justify == left, 0, auto) if($justify == right, 0, auto);\n\n  @if not(index(left right center, $justify)) {\n    $_return: nth($justify, 1);\n    $_return: $_return if(length($justify) > 1, nth($justify, 2), $_return);\n  }\n\n  @return $_return;\n}\n","// Susy Fallback Clearfix\n// ======================\n\n\n// Clearfix\n// --------\n// Check for an existing support mixin, or provide a simple fallback.\n@mixin susy-clearfix {\n  @if susy-support(clearfix, (mixin: clearfix)) {\n    @include clearfix;\n  } @else {\n    &:after {\n      content: \" \";\n      display: block;\n      clear: both;\n    }\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Float Span API\n// ==============\n\n// Float Span Output\n// -----------------\n// - $width             : <length>\n// - [$float]           : from | to\n// - [$margin-before]   : <length>\n// - [$margin-after]    : <length>\n// - [$padding-before]  : <length>\n// - [$padding-after]   : <length>\n// - [$flow]            : ltr | rtl\n@mixin float-span-output(\n  $width,\n  $float            : from,\n  $margin-before    : null,\n  $margin-after     : null,\n  $padding-before   : null,\n  $padding-after    : null,\n  $flow             : map-get($susy-defaults, flow)\n) {\n  $to     : to($flow);\n  $from   : from($flow);\n\n  $output: (\n    width: $width,\n    float: if($float == to, $to, null) or if($float == from, $from, null),\n    margin-#{$from}: $margin-before,\n    margin-#{$to}: $margin-after,\n    padding-#{$from}: $padding-before,\n    padding-#{$to}: $padding-after,\n  );\n\n  @include output($output);\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","//write here your sass\n$topBannerBg: #363636\n$headerBg: #e74c3c\n$yellow: #e5bb31\n\n$tr: all .3s ease\n\nbody\n\tcolor: #fff\n\tfont-size: 14px\n\tline-height: 1.6\n\tfont-family: 'Open Sans', sans-serif\n\na\n\tdisplay: block\n\tcolor: $yellow\n\t&:hover\n\t\ttext-decoration: none\n\nh1\n\tfont-size: 64px\n\nh2\n\tfont-size: 38px\n\nh3\n\tfont-size: 22px\n\nh4\n\tfont-size: 18px\n\n.title\n\ttext-transform: uppercase\n\n\tspan\n\t\tcolor: $yellow",".header\n\tposition: absolute\n\twidth: 100%\n\n\t&__wrap\n\t\tbackground: $yellow\n\n.footer\n\tpadding: 35px 0 40px\n\tbackground: #000\n\n\t&__title\n\t\tmargin-bottom: 30px\n\n\t&__row\n\t\tmargin-top: 20px\n\t\t+clr\n\n\t\t&:first-child\n\t\t\tmargin-top: 0\n\n\t&__img\n\t\tfloat: left\n\t\tmargin-right: 8px\n\t\twidth: 50px\n\t\theight: 50px\n\n\t&__text\n\t\tfont-size: 12px\n\t\tline-height: 1.4\n\t\tcolor: #8a8a8a\n\n\t&__link\n\t\tdisplay: inline-block","// clearfix\n=clr\n  &:after\n    content: \" \"\n    display: table\n    clear: both\n  *zoom: 1\n\n// fast font-family\n// usage:\n// +font(black, cytiapro-black-webfont)\n=font($alias, $name)\n  @font-face\n    font-family: $alias\n    src: url(\"../fonts/\" + $name + \".eot\")\n    src: url(\"../fonts/\" + $name + \".eot?#iefix\") format(\"embedded-opentype\"), url(\"../fonts/\" + $name + \".woff2\") format(\"woff2\"), url(\"../fonts/\" + $name + \".woff\") format(\"woff\"), url(\"../fonts/\" + $name + \".ttf\") format(\"truetype\")\n    font-weight: normal\n    font-style: normal\n\n// fast media-query with max-width\n// usage:\n// +m(768)\n=m($width)\n  @media only screen and (max-width: $width+ \"px\")\n    @content\n\n// cover\n=cover\n  background-repeat: no-repeat\n  background-size: cover\n  background-position: 50% 50%\n\n// font-size\n=fs($sizeValue)\n  font-size: $sizeValue + px\n\n// easy align at center\n=center\n  position: absolute\n  top: 50%\n  left: 50%\n  transform: translate(-50%,-50%)",".btn\n\tdisplay: inline-block\n\tpadding: 0 50px\n\theight: 50px\n\tline-height: 50px\n\tborder: 1px solid #9b9b9b\n\tfont-size: 16px\n\tcolor: #fff\n\ttext-transform: uppercase\n\ttext-decoration: none\n\ttransition: $tr\n\n\t&:hover\n\t\tbackground: $yellow",".ico\n\tdisplay: inline-block\n\n\t&.is-twitter\n\t\twidth: 18px\n\t\theight: 14px\n\t\tbackground-image: url(\"../img/Twitter.png\")\n\n\t&.is-facebook\n\t\twidth: 8px\n\t\theight: 14px\n\t\tbackground-image: url(\"../img/Facebook.png\")\n\n\t&.is-google\n\t\twidth: 16px\n\t\theight: 14px\n\t\tbackground-image: url(\"../img/Google.png\")\n\n\t&.is-pinterest\n\t\twidth: 12px\n\t\theight: 14px\n\t\tbackground-image: url(\"../img/Pinterest.png\")",".social\n\tmargin-top: 5px\n\t+clr\n\n\t&__el\n\t\tfloat: left\n\n\t\t&:first-child\n\t\t\tmargin-left: 0\n\n\t&__link\n\t\twidth: 25px\n\t\theight: 25px\n\t\tline-height: 30px\n\t\ttext-align: center\n\t\ttransition: $tr\n\n\t\t&:hover\n\t\t\tbackground-color: $yellow",".nav\n\tfloat: right\n\n\t&__list\n\t\t+clr\n\n\t&__el\n\t\tfloat: left\n\n\t&__link\n\t\tpadding: 0 20px\n\t\theight: 100px\n\t\tline-height: 100px\n\t\tcolor: #fff\n\t\ttext-decoration: none\n\t\ttext-transform: uppercase\n\t\tfont-size: 16px\n\t\tfont-weight: 100\n\t\ttransition: $tr\n\n\t\t&:hover\n\t\t\tbackground-color: lighten($yellow, 10%)",".top-banner\n\theight: 700px\n\tpadding-top: 280px\n\tbackground-color: rgba(0,0,0,.6)\n\ttext-align: center\n\tbox-sizing: border-box\n\n\t&__title\n\t\tmargin-bottom: 40px\n\t\tfont-weight: 100\n\n\t&__text\n\t\tmax-width: 625px\n\t\tmargin: 0 auto 80px\n\t\tline-height: 1.6",".privilege\n\tpadding: 100px 0\n\tcolor: #3e3e3e\n\n\t&__title\n\t\tfont-weight: bold\n\n\t&__text\n\t\tcolor: #3e3e3e\n\n\t&__link\n\t\tdisplay: inline-block",".help\n\tpadding: 50px 0\n\tbackground-color: rgba(0,0,0,.6)\n\ttext-align: center\n\n\t&__title\n\t\tmargin-bottom: 60px\n\t\tfont-weight: 100\n\t\n\t&__ico\n\t\tmargin-bottom: 20px\n\t\topacity: .7\n\t\t\n\t\tsvg\n\t\t\tfill: #fff"],"sourceRoot":"/source/"}